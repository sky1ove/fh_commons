# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_basic.ipynb.

# %% auto 0
__all__ = ['get_file_input', 'bytes2df', 'get_page_index', 'modal_content', 'modal_form', 'modal_link', 'get_input',
           'get_input_list', 'get_select', 'get_select_simple', 'get_select_simple_multiple', 'get_spinner']

# %% ../nbs/02_basic.ipynb 3
from fasthtml.common import *
from fasthtml.jupyter import *

from .core import *
from .static import *

import json
import pandas as pd
from math import ceil

# %% ../nbs/02_basic.ipynb 49
def get_file_input(label_text,id,**kwargs):
    return Form(
        Label(label_text, fr=id, cls='form-label'),
        Input(type='file', id=id, cls='form-control'),
        **kwargs
    )

# %% ../nbs/02_basic.ipynb 52
def bytes2df(bytes_data,file_type):
    if file_type == "csv":
        data_io = StringIO(bytes_data.decode("utf-8"))
        return pd.read_csv(data_io)
    elif file_type == "excel":
        data_io = BytesIO(bytes_data)
        return pd.read_excel(data_io)

# %% ../nbs/02_basic.ipynb 61
def get_page_index(current_page, total_items, items_per_page=12):
    "Get start index and end index given the current page number"
    
    total_pages = ceil(total_items / items_per_page) #ceil returns integer number, ceil(4.2) --> 5
    
    page = max(1, min(current_page, total_pages))  # Ensure page is within valid range
    
    start_index = (current_page - 1) * items_per_page
    end_index = start_index + items_per_page
    
    return start_index, end_index,total_pages

# %% ../nbs/02_basic.ipynb 70
def modal_content(title, *args):
    return Div(
        Div(
            Div(
                H1(title, cls='modal-title fs-5'),
                Button(type='button', data_bs_dismiss='modal', aria_label='Close', cls='btn-close'),
                cls='modal-header'
            ),
            Div(*args, cls='modal-body'),
            cls='modal-content'
        ),
        cls='modal-dialog modal-xl'
    )

# %% ../nbs/02_basic.ipynb 74
def modal_form(*form_content,post, btn_text='Search',cls=None,target_id='modals-window'):
    "Reference: https://htmx.org/examples/modal-bootstrap/"
    modal_button = Form(*form_content, # Input(type='text',id='ssss')
                        Div(
                            Button(btn_text,cls='btn btn-primary py-3'),
                            data_bs_toggle='modal', 
                            data_bs_target=f'#{target_id}'),
                        post=post, 
                        target_id=target_id, 
                        hx_trigger='submit', 
                        cls=cls)

    modal_content =Div(
        Div(
            Div(cls='modal-content'),
            role='document',
            cls='modal-dialog modal-lg modal-dialog-centered'
        ),
        id=target_id,
        style='display: none',
        aria_hidden='false',
        tabindex='-1',
        cls='modal modal-blur fade'
    )
    return modal_button, modal_content

# %% ../nbs/02_basic.ipynb 78
def modal_link(text,post,cls=None,target_id='modals-window'):
    "Reference: https://htmx.org/examples/modal-bootstrap/"
    modal_button = A(text,
                     data_bs_toggle='modal', 
                     data_bs_target=f'#{target_id}',
                     post=post, 
                     target_id=target_id, 
                     cls=cls)

    modal_content =Div(
        Div(
            Div(cls='modal-content'),
            role='document',
            cls='modal-dialog modal-lg modal-dialog-centered'
        ),
        id=target_id,
        style='display: none',
        aria_hidden='false',
        tabindex='-1',
        cls='modal modal-blur fade'
    )
    return modal_button, modal_content

# %% ../nbs/02_basic.ipynb 82
def get_input(label_text,id,cls=None, type='text',**kwargs):
    return Div(
        Input(type=type, id=id, cls='form-control',placeholder=label_text,**kwargs),
        Label(label_text, fr=id),
        cls=f'form-floating {cls}')

# %% ../nbs/02_basic.ipynb 84
def get_input_list(label_text, input_list, id, cls=None, type='text', **kwargs):
    input_div = Div(
        Input(type=type, id=id, cls='form-control', placeholder=label_text, autocomplete="off", **kwargs),
        Label(label_text, fr=id),
        Div(
            *[Div(item, cls='dropdown-item', data_value=item) for item in input_list],
            id=f'{id}-dropdown',
            cls='dropdown-menu'
        ),
        cls=f'form-floating position-relative {cls}'
    )

    script = Script(f"""
    document.addEventListener('DOMContentLoaded', function() {{
        setupAutocomplete('#{id}', '#{id}-dropdown');
    }});
    """)

    return input_div, script

# %% ../nbs/02_basic.ipynb 89
def get_select(label_text,option_list,id,cls=None, **kwargs):
    "The first item in the option_list is the default"
    return Div(
        Select(
            Option(option_list[0], value=option_list[0],selected=True),
            *[Option(i, value=i) for i in option_list[1:]],
            id = id,
            cls='form-select',
            **kwargs
        ),
        Label(label_text, fr=id),
        cls=f'form-floating {cls}')


# %% ../nbs/02_basic.ipynb 91
def get_select_simple(label_text, select_list,id,cls=None):
    return Div(Select(
        Option(label_text, selected=True,disabled=True),
        *[Option(i,value=i) for i in select_list],
        cls='form-select',
        id = id), cls=cls)

# %% ../nbs/02_basic.ipynb 94
def get_select_simple_multiple(label_text, select_list,id,cls=None):
    return Div(Select(
        Option(label_text, selected=True,disabled=True),
        *[Option(i,value=i) for i in select_list],
        cls='form-select',
        multiple=True,
        id = id), cls=cls)

# %% ../nbs/02_basic.ipynb 97
def get_spinner(id, cls='d-flex justify-content-center'):
    return Div(Div(
        Span('Loading...', cls='visually-hidden'),
        role='status',
        cls='htmx-indicator spinner-border',
        id=id,
    ),cls=cls)
